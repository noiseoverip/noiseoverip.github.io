<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Saulius Blog</title>
    <link>https://noiseoverip.github.io/post/</link>
    <description>Recent content in Posts on Saulius Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="https://noiseoverip.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Running CoreDNS on Ubuntu 18.04</title>
      <link>https://noiseoverip.github.io/post/coredns_on_ubuntu18/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://noiseoverip.github.io/post/coredns_on_ubuntu18/</guid>
      <description>Systemd runs a local DNS stub resolver on 127.0.0.53:53. It acts as a proxy and forwards all DNS queries to Google or Cloudflare DNS servers (1.1.1.1, 8.8.8.8, 1.0.0.1, 8.8.4.4) by default. All local DNS queries get resolved through it default resolver configuration in /etc/resolv.conf points to it (nameserver 127.0.0.53). This file is actually a symbolic link to /var/run/systemd/resolve/stub-resolv.conf which is a dynamic resolver (routines in C library) configuration managed by systemd-resolved</description>
    </item>
    
    <item>
      <title>Safe python execution via Docker and Django Web UI</title>
      <link>https://noiseoverip.github.io/post/safe-python-on-docker/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://noiseoverip.github.io/post/safe-python-on-docker/</guid>
      <description>So I decided to explore the idea of running python code in docker. Always wanted to try Django web framework so this was my chance J.
What I ended up doing is tiny Web page where you can enter python code which gets executed inside docker container and resulting python console output displayed to user. Sure this is just a proof of concept, but something close to this could be used to safely execute custom code provided by client in some real product.</description>
    </item>
    
  </channel>
</rss>